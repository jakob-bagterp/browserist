[tox]
minversion = 3.8.0
envlist = py310, mypy, flake8
isolated_build = true

[gh-actions]
python =
    3.10: py310, mypy, flake8

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements_dev.txt
commands =
    pytest --basetemp={envtmpdir} --cov --cov-append --cov-report=term-missing \
        # Ignore tests that require a non-headless browser and are only supported on a local machine:
        --ignore=test/browser/combo/cookie_banner_test.py \
        --ignore=test/browser/combo/login_test.py \
        --ignore=test/browser/combo/search_test.py \
        --ignore=test/browser/input/select_headless_exception_test.py \
        --ignore=test/browser/screen/height_non_headless_test.py \
        --ignore=test/browser/screen/size_non_headless_test.py \
        --ignore=test/browser/screen/width_non_headless_test.py \
        --ignore=test/browser/window/get/height_1_test.py \
        --ignore=test/browser/window/get/position_1_test.py \
        --ignore=test/browser/window/get/size_1_test.py \
        --ignore=test/browser/window/get/width_1_test.py \
        --ignore=test/browser/window/set/position_2_test.py \
        --ignore=test/browser/window/set/size_2_test.py \
        --ignore=test/browser/window/fullscreen_test.py \
        --ignore=test/browser/window/maximize_test.py \
        --ignore=test/browser/window/minimize_test.py \
        # Ignore tests that evalaute methods indirectly by timing and/or network performance,
        # and so they likely to fail on GitHub Actions. Only run on a local machine:
        --ignore=test/browser/open/url_if_not_current_by_timing_performance_test.py \
        --ignore=test/browser/wait/random_time_test.py \
        # Fails on GitHub Actions, but not when running Pytest on a local machine:
        --ignore=test/browser/check_if/is_image_loaded_test.py \
        --ignore=test/browser/wait/until/images_have_loaded_test.py \
        --ignore=test/helper/image/is_element_loaded_test.py \
        --ignore=test/type/xpath/exception_handling/method/wait_until_images_have_loaded_test.py

[testenv:mypy]
basepython = python3.10
deps =
    -r{toxinidir}/requirements_dev.txt
commands = mypy src

[testenv:flake8]
basepython = python3.10
deps = flake8
commands = flake8 src test

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase
